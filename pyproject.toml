[project]
name = "antimon"
version = "0.2.13"
description = "Security validation tool for AI coding assistants"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["security", "validation", "ai", "coding", "assistant", "hook"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/antimon-security/antimon"
Documentation = "https://github.com/antimon-security/antimon#readme"
Repository = "https://github.com/antimon-security/antimon"
Issues = "https://github.com/antimon-security/antimon/issues"

[project.scripts]
antimon = "antimon.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "ruff>=0.0.287",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=antimon",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "PT", "SIM", "RUF"]
ignore = ["E501", "RUF001", "SIM102"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
